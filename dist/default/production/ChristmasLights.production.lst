

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 18 21:38:57 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 05/05/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F14K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	nvCOMRAM
    68  000039                     __pnvCOMRAM:
    69                           	callstack 0
    70  000039                     _ADC1_InterruptHandler:
    71                           	callstack 0
    72  000039                     	ds	2
    73  0000                     _RCONbits	set	4048
    74  0000                     _PIR1bits	set	3998
    75  0000                     _ADCON0bits	set	4034
    76  0000                     _PIE1bits	set	3997
    77  0000                     _ADCON0	set	4034
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADRESL	set	4035
    80  0000                     _ADCON2	set	4032
    81  0000                     _ADCON1	set	4033
    82  0000                     _LATAbits	set	3977
    83  0000                     _INTCONbits	set	4082
    84  0000                     _INTCON2bits	set	4081
    85  0000                     _WPUA	set	3959
    86  0000                     _WPUB	set	3960
    87  0000                     _ANSELH	set	3967
    88  0000                     _ANSEL	set	3966
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISA	set	3986
    92  0000                     _LATC	set	3979
    93  0000                     _LATB	set	3978
    94  0000                     _LATA	set	3977
    95  0000                     _OSCTUNE	set	3995
    96  0000                     _OSCCON2	set	4050
    97  0000                     _OSCCON	set	4051
    98  0000                     _GIE	set	32663
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  0006CE                     __pcinit:
   104                           	callstack 0
   105  0006CE                     start_initialization:
   106                           	callstack 0
   107  0006CE                     __initialization:
   108                           	callstack 0
   109  0006CE                     end_of_initialization:
   110                           	callstack 0
   111  0006CE                     __end_of__initialization:
   112                           	callstack 0
   113  0006CE  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   114  0006D0  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   115  0006D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   116  0006D4  6EF8               	movwf	tblptru,c
   117  0006D6  0100               	movlb	0
   118  0006D8  EF12  F003         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	cstackCOMRAM
   121  000001                     __pcstackCOMRAM:
   122                           	callstack 0
   123  000001                     ??_INTERRUPT_InterruptManager:
   124                           
   125                           ; 1 bytes @ 0x0
   126  000001                     	ds	2
   127  000003                     ?___wmul:
   128                           	callstack 0
   129  000003                     WS_Write@A:
   130                           	callstack 0
   131  000003                     ADC1_SetInterruptHandler@InterruptHandler:
   132                           	callstack 0
   133  000003                     ___wmul@multiplier:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137  000003                     	ds	2
   138  000005                     WS_Word@A:
   139                           	callstack 0
   140  000005                     ___wmul@multiplicand:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x4
   144  000005                     	ds	2
   145  000007                     WS_Word@B:
   146                           	callstack 0
   147  000007                     ___wmul@product:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x6
   151  000007                     	ds	2
   152  000009                     WS_Word@C:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x8
   156  000009                     	ds	2
   157  00000B                     ??_WS_Word:
   158                           
   159                           ; 1 bytes @ 0xA
   160  00000B                     	ds	3
   161  00000E                     WS_Word@x:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0xD
   165  00000E                     	ds	2
   166  000010                     WS_Word@x_248:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0xF
   170  000010                     	ds	2
   171  000012                     WS_Word@x_249:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x11
   175  000012                     	ds	2
   176  000014                     WS_Word@Bx:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x13
   180  000014                     	ds	2
   181  000016                     WS_Word@i:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x15
   185  000016                     	ds	2
   186  000018                     WS_dim@A:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x17
   190  000018                     	ds	2
   191  00001A                     WS_dim@B:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x19
   195  00001A                     	ds	2
   196  00001C                     WS_dim@C:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x1B
   200  00001C                     	ds	2
   201  00001E                     WS_dim@brightness:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x1D
   205  00001E                     	ds	2
   206  000020                     ??_WS_dim:
   207                           
   208                           ; 1 bytes @ 0x1F
   209  000020                     	ds	1
   210  000021                     WS_dim@f:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x20
   214  000021                     	ds	2
   215  000023                     WS_RYGCBM@length:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x22
   219  000023                     	ds	2
   220  000025                     WS_RYGCBM@brightness:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x24
   224  000025                     	ds	2
   225  000027                     ??_WS_RYGCBM:
   226                           
   227                           ; 1 bytes @ 0x26
   228  000027                     	ds	5
   229  00002C                     WS_RYGCBM@b:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x2B
   233  00002C                     	ds	2
   234  00002E                     WSSlow@lengh:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x2D
   238  00002E                     	ds	2
   239  000030                     WSSlow@maxBrightness:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x2F
   243  000030                     	ds	2
   244  000032                     WSSlow@minBrightness:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x31
   248  000032                     	ds	2
   249  000034                     ??_WSSlow:
   250                           
   251                           ; 1 bytes @ 0x33
   252  000034                     	ds	1
   253  000035                     WSSlow@i:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x34
   257  000035                     	ds	2
   258  000037                     WSSlow@i_263:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x36
   262  000037                     	ds	2
   263  000039                     
   264                           ; 1 bytes @ 0x38
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 50 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1
   284 ;;      Params:         0       0       0
   285 ;;      Locals:         0       0       0
   286 ;;      Temps:          0       0       0
   287 ;;      Totals:         0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels required when called:    8
   290 ;; This function calls:
   291 ;;		_SYSTEM_Initialize
   292 ;;		_WSSlow
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299  000624                     __ptext0:
   300                           	callstack 0
   301  000624                     _main:
   302                           	callstack 23
   303  000624                     
   304                           ;main.c: 53:     SYSTEM_Initialize();
   305  000624  EC5E  F003         	call	_SYSTEM_Initialize	;wreg free
   306  000628                     l1489:
   307                           
   308                           ;main.c: 72:     {;main.c: 73:         WSSlow(100, 32, 3);
   309  000628  0E00               	movlw	0
   310  00062A  6E2F               	movwf	(WSSlow@lengh+1)^0,c
   311  00062C  0E64               	movlw	100
   312  00062E  6E2E               	movwf	WSSlow@lengh^0,c
   313  000630  0E00               	movlw	0
   314  000632  6E31               	movwf	(WSSlow@maxBrightness+1)^0,c
   315  000634  0E20               	movlw	32
   316  000636  6E30               	movwf	WSSlow@maxBrightness^0,c
   317  000638  0E00               	movlw	0
   318  00063A  6E33               	movwf	(WSSlow@minBrightness+1)^0,c
   319  00063C  0E03               	movlw	3
   320  00063E  6E32               	movwf	WSSlow@minBrightness^0,c
   321  000640  EC90  F002         	call	_WSSlow	;wreg free
   322  000644  EF14  F003         	goto	l1489
   323  000648  EF3A  F000         	goto	start
   324  00064C                     __end_of_main:
   325                           	callstack 0
   326                           
   327 ;; *************** function _WSSlow *****************
   328 ;; Defined at:
   329 ;;		line 83 in file "WS2812b/BitBangWS2812b.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  lengh           2   45[COMRAM] int 
   332 ;;  maxBrightnes    2   47[COMRAM] int 
   333 ;;  minBrightnes    2   49[COMRAM] int 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  i               2   54[COMRAM] int 
   336 ;;  i               2   52[COMRAM] int 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1
   346 ;;      Params:         6       0       0
   347 ;;      Locals:         4       0       0
   348 ;;      Temps:          1       0       0
   349 ;;      Totals:        11       0       0
   350 ;;Total ram usage:       11 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; Hardware stack levels required when called:    7
   353 ;; This function calls:
   354 ;;		_WS_RYGCBM
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text1
   361  000520                     __ptext1:
   362                           	callstack 0
   363  000520                     _WSSlow:
   364                           	callstack 23
   365  000520                     
   366                           ;WS2812b/BitBangWS2812b.c: 83: void WSSlow(int lengh, int maxBrightness, int minBrightne
      +                          ss);WS2812b/BitBangWS2812b.c: 84: {;WS2812b/BitBangWS2812b.c: 85:     for(int i = minBri
      +                          ghtness; i<=maxBrightness; i++)
   367  000520  C032  F035         	movff	WSSlow@minBrightness,WSSlow@i
   368  000524  C033  F036         	movff	WSSlow@minBrightness+1,WSSlow@i+1
   369  000528  EFAA  F002         	goto	l1363
   370  00052C                     l1357:
   371                           
   372                           ;WS2812b/BitBangWS2812b.c: 86:     {;WS2812b/BitBangWS2812b.c: 87:         WS_RYGCBM(len
      +                          gh, i);
   373  00052C  C02E  F023         	movff	WSSlow@lengh,WS_RYGCBM@length
   374  000530  C02F  F024         	movff	WSSlow@lengh+1,WS_RYGCBM@length+1
   375  000534  C035  F025         	movff	WSSlow@i,WS_RYGCBM@brightness
   376  000538  C036  F026         	movff	WSSlow@i+1,WS_RYGCBM@brightness+1
   377  00053C  EC3C  F000         	call	_WS_RYGCBM	;wreg free
   378  000540                     
   379                           ;WS2812b/BitBangWS2812b.c: 88:         _delay((unsigned long)((10)*(32000000/4000.0)));
   380  000540  0E68               	movlw	104
   381  000542  6E34               	movwf	??_WSSlow^0,c
   382  000544  0EE4               	movlw	228
   383  000546                     u677:
   384  000546  2EE8               	decfsz	wreg,f,c
   385  000548  D7FE               	bra	u677
   386  00054A  2E34               	decfsz	??_WSSlow^0,f,c
   387  00054C  D7FC               	bra	u677
   388  00054E  D000               	nop2	
   389  000550                     
   390                           ;WS2812b/BitBangWS2812b.c: 89:     }
   391  000550  4A35               	infsnz	WSSlow@i^0,f,c
   392  000552  2A36               	incf	(WSSlow@i+1)^0,f,c
   393  000554                     l1363:
   394  000554  5035               	movf	WSSlow@i^0,w,c
   395  000556  5C30               	subwf	WSSlow@maxBrightness^0,w,c
   396  000558  5031               	movf	(WSSlow@maxBrightness+1)^0,w,c
   397  00055A  0A80               	xorlw	128
   398  00055C  6E34               	movwf	??_WSSlow^0,c
   399  00055E  5036               	movf	(WSSlow@i+1)^0,w,c
   400  000560  0A80               	xorlw	128
   401  000562  5834               	subwfb	??_WSSlow^0,w,c
   402  000564  B0D8               	btfsc	status,0,c
   403  000566  EFB7  F002         	goto	u571
   404  00056A  EFB9  F002         	goto	u570
   405  00056E                     u571:
   406  00056E  EF96  F002         	goto	l1357
   407  000572                     u570:
   408  000572                     
   409                           ;WS2812b/BitBangWS2812b.c: 90:     for(int i = maxBrightness; i>=minBrightness; i--)
   410  000572  C030  F037         	movff	WSSlow@maxBrightness,WSSlow@i_263
   411  000576  C031  F038         	movff	WSSlow@maxBrightness+1,WSSlow@i_263+1
   412  00057A  EFD4  F002         	goto	l1371
   413  00057E                     l1365:
   414                           
   415                           ;WS2812b/BitBangWS2812b.c: 91:     {;WS2812b/BitBangWS2812b.c: 92:         WS_RYGCBM(len
      +                          gh, i);
   416  00057E  C02E  F023         	movff	WSSlow@lengh,WS_RYGCBM@length
   417  000582  C02F  F024         	movff	WSSlow@lengh+1,WS_RYGCBM@length+1
   418  000586  C037  F025         	movff	WSSlow@i_263,WS_RYGCBM@brightness
   419  00058A  C038  F026         	movff	WSSlow@i_263+1,WS_RYGCBM@brightness+1
   420  00058E  EC3C  F000         	call	_WS_RYGCBM	;wreg free
   421  000592                     
   422                           ;WS2812b/BitBangWS2812b.c: 93:         _delay((unsigned long)((10)*(32000000/4000.0)));
   423  000592  0E68               	movlw	104
   424  000594  6E34               	movwf	??_WSSlow^0,c
   425  000596  0EE4               	movlw	228
   426  000598                     u687:
   427  000598  2EE8               	decfsz	wreg,f,c
   428  00059A  D7FE               	bra	u687
   429  00059C  2E34               	decfsz	??_WSSlow^0,f,c
   430  00059E  D7FC               	bra	u687
   431  0005A0  D000               	nop2	
   432  0005A2                     
   433                           ;WS2812b/BitBangWS2812b.c: 94:     }
   434  0005A2  0637               	decf	WSSlow@i_263^0,f,c
   435  0005A4  A0D8               	btfss	status,0,c
   436  0005A6  0638               	decf	(WSSlow@i_263+1)^0,f,c
   437  0005A8                     l1371:
   438  0005A8  5032               	movf	WSSlow@minBrightness^0,w,c
   439  0005AA  5C37               	subwf	WSSlow@i_263^0,w,c
   440  0005AC  5038               	movf	(WSSlow@i_263+1)^0,w,c
   441  0005AE  0A80               	xorlw	128
   442  0005B0  6E34               	movwf	??_WSSlow^0,c
   443  0005B2  5033               	movf	(WSSlow@minBrightness+1)^0,w,c
   444  0005B4  0A80               	xorlw	128
   445  0005B6  5834               	subwfb	??_WSSlow^0,w,c
   446  0005B8  B0D8               	btfsc	status,0,c
   447  0005BA  EFE1  F002         	goto	u581
   448  0005BE  EFE3  F002         	goto	u580
   449  0005C2                     u581:
   450  0005C2  EFBF  F002         	goto	l1365
   451  0005C6                     u580:
   452  0005C6  0012               	return		;funcret
   453  0005C8                     __end_of_WSSlow:
   454                           	callstack 0
   455                           
   456 ;; *************** function _WS_RYGCBM *****************
   457 ;; Defined at:
   458 ;;		line 96 in file "WS2812b/BitBangWS2812b.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;  length          2   34[COMRAM] int 
   461 ;;  brightness      2   36[COMRAM] int 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  b               2   43[COMRAM] int 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1
   473 ;;      Params:         4       0       0
   474 ;;      Locals:         2       0       0
   475 ;;      Temps:          5       0       0
   476 ;;      Totals:        11       0       0
   477 ;;Total ram usage:       11 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    6
   480 ;; This function calls:
   481 ;;		_WS_dim
   482 ;; This function is called by:
   483 ;;		_WSSlow
   484 ;;		_WSTest
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text2
   489  000078                     __ptext2:
   490                           	callstack 0
   491  000078                     _WS_RYGCBM:
   492                           	callstack 23
   493  000078                     
   494                           ;WS2812b/BitBangWS2812b.c: 96: void WS_RYGCBM(int length, int brightness);WS2812b/BitBan
      +                          gWS2812b.c: 97: {;WS2812b/BitBangWS2812b.c: 98:     int b =0;
   495  000078  0E00               	movlw	0
   496  00007A  6E2D               	movwf	(WS_RYGCBM@b+1)^0,c
   497  00007C  0E00               	movlw	0
   498  00007E  6E2C               	movwf	WS_RYGCBM@b^0,c
   499                           
   500                           ;WS2812b/BitBangWS2812b.c: 99:     for(b = 0; b<length-6; b+=6 )
   501  000080  0E00               	movlw	0
   502  000082  6E2D               	movwf	(WS_RYGCBM@b+1)^0,c
   503  000084  0E00               	movlw	0
   504  000086  6E2C               	movwf	WS_RYGCBM@b^0,c
   505  000088  EFAD  F000         	goto	l1293
   506  00008C                     l1289:
   507                           
   508                           ;WS2812b/BitBangWS2812b.c: 100:     {;WS2812b/BitBangWS2812b.c: 101:         WS_dim(0xFF
      +                          , 0x00, 0x00, brightness);
   509  00008C  0E00               	movlw	0
   510  00008E  6E19               	movwf	(WS_dim@A+1)^0,c
   511  000090  6818               	setf	WS_dim@A^0,c
   512  000092  0E00               	movlw	0
   513  000094  6E1B               	movwf	(WS_dim@B+1)^0,c
   514  000096  0E00               	movlw	0
   515  000098  6E1A               	movwf	WS_dim@B^0,c
   516  00009A  0E00               	movlw	0
   517  00009C  6E1D               	movwf	(WS_dim@C+1)^0,c
   518  00009E  0E00               	movlw	0
   519  0000A0  6E1C               	movwf	WS_dim@C^0,c
   520  0000A2  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   521  0000A6  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   522  0000AA  EC32  F002         	call	_WS_dim	;wreg free
   523                           
   524                           ;WS2812b/BitBangWS2812b.c: 102:         WS_dim(0xFF, 0xFF, 0x00, brightness);
   525  0000AE  0E00               	movlw	0
   526  0000B0  6E19               	movwf	(WS_dim@A+1)^0,c
   527  0000B2  6818               	setf	WS_dim@A^0,c
   528  0000B4  0E00               	movlw	0
   529  0000B6  6E1B               	movwf	(WS_dim@B+1)^0,c
   530  0000B8  681A               	setf	WS_dim@B^0,c
   531  0000BA  0E00               	movlw	0
   532  0000BC  6E1D               	movwf	(WS_dim@C+1)^0,c
   533  0000BE  0E00               	movlw	0
   534  0000C0  6E1C               	movwf	WS_dim@C^0,c
   535  0000C2  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   536  0000C6  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   537  0000CA  EC32  F002         	call	_WS_dim	;wreg free
   538                           
   539                           ;WS2812b/BitBangWS2812b.c: 103:         WS_dim(0x00, 0xFF, 0x00, brightness);
   540  0000CE  0E00               	movlw	0
   541  0000D0  6E19               	movwf	(WS_dim@A+1)^0,c
   542  0000D2  0E00               	movlw	0
   543  0000D4  6E18               	movwf	WS_dim@A^0,c
   544  0000D6  0E00               	movlw	0
   545  0000D8  6E1B               	movwf	(WS_dim@B+1)^0,c
   546  0000DA  681A               	setf	WS_dim@B^0,c
   547  0000DC  0E00               	movlw	0
   548  0000DE  6E1D               	movwf	(WS_dim@C+1)^0,c
   549  0000E0  0E00               	movlw	0
   550  0000E2  6E1C               	movwf	WS_dim@C^0,c
   551  0000E4  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   552  0000E8  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   553  0000EC  EC32  F002         	call	_WS_dim	;wreg free
   554                           
   555                           ;WS2812b/BitBangWS2812b.c: 104:         WS_dim(0x00, 0xFF, 0xFF, brightness);
   556  0000F0  0E00               	movlw	0
   557  0000F2  6E19               	movwf	(WS_dim@A+1)^0,c
   558  0000F4  0E00               	movlw	0
   559  0000F6  6E18               	movwf	WS_dim@A^0,c
   560  0000F8  0E00               	movlw	0
   561  0000FA  6E1B               	movwf	(WS_dim@B+1)^0,c
   562  0000FC  681A               	setf	WS_dim@B^0,c
   563  0000FE  0E00               	movlw	0
   564  000100  6E1D               	movwf	(WS_dim@C+1)^0,c
   565  000102  681C               	setf	WS_dim@C^0,c
   566  000104  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   567  000108  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   568  00010C  EC32  F002         	call	_WS_dim	;wreg free
   569                           
   570                           ;WS2812b/BitBangWS2812b.c: 105:         WS_dim(0x00, 0x00, 0xFF, brightness);
   571  000110  0E00               	movlw	0
   572  000112  6E19               	movwf	(WS_dim@A+1)^0,c
   573  000114  0E00               	movlw	0
   574  000116  6E18               	movwf	WS_dim@A^0,c
   575  000118  0E00               	movlw	0
   576  00011A  6E1B               	movwf	(WS_dim@B+1)^0,c
   577  00011C  0E00               	movlw	0
   578  00011E  6E1A               	movwf	WS_dim@B^0,c
   579  000120  0E00               	movlw	0
   580  000122  6E1D               	movwf	(WS_dim@C+1)^0,c
   581  000124  681C               	setf	WS_dim@C^0,c
   582  000126  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   583  00012A  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   584  00012E  EC32  F002         	call	_WS_dim	;wreg free
   585                           
   586                           ;WS2812b/BitBangWS2812b.c: 106:         WS_dim(0xFF, 0x00, 0xFF, brightness);
   587  000132  0E00               	movlw	0
   588  000134  6E19               	movwf	(WS_dim@A+1)^0,c
   589  000136  6818               	setf	WS_dim@A^0,c
   590  000138  0E00               	movlw	0
   591  00013A  6E1B               	movwf	(WS_dim@B+1)^0,c
   592  00013C  0E00               	movlw	0
   593  00013E  6E1A               	movwf	WS_dim@B^0,c
   594  000140  0E00               	movlw	0
   595  000142  6E1D               	movwf	(WS_dim@C+1)^0,c
   596  000144  681C               	setf	WS_dim@C^0,c
   597  000146  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   598  00014A  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   599  00014E  EC32  F002         	call	_WS_dim	;wreg free
   600  000152                     
   601                           ;WS2812b/BitBangWS2812b.c: 107:     }
   602  000152  0E06               	movlw	6
   603  000154  262C               	addwf	WS_RYGCBM@b^0,f,c
   604  000156  0E00               	movlw	0
   605  000158  222D               	addwfc	(WS_RYGCBM@b+1)^0,f,c
   606  00015A                     l1293:
   607  00015A  0EFA               	movlw	250
   608  00015C  6E27               	movwf	??_WS_RYGCBM^0,c
   609  00015E  0EFF               	movlw	255
   610  000160  6E28               	movwf	(??_WS_RYGCBM+1)^0,c
   611  000162  C023  F029         	movff	WS_RYGCBM@length,??_WS_RYGCBM+2
   612  000166  C024  F02A         	movff	WS_RYGCBM@length+1,??_WS_RYGCBM+3
   613  00016A  5027               	movf	??_WS_RYGCBM^0,w,c
   614  00016C  2629               	addwf	(??_WS_RYGCBM+2)^0,f,c
   615  00016E  5028               	movf	(??_WS_RYGCBM+1)^0,w,c
   616  000170  222A               	addwfc	(??_WS_RYGCBM+3)^0,f,c
   617  000172  5029               	movf	(??_WS_RYGCBM+2)^0,w,c
   618  000174  5C2C               	subwf	WS_RYGCBM@b^0,w,c
   619  000176  502D               	movf	(WS_RYGCBM@b+1)^0,w,c
   620  000178  0A80               	xorlw	128
   621  00017A  6E2B               	movwf	(??_WS_RYGCBM+4)^0,c
   622  00017C  502A               	movf	(??_WS_RYGCBM+3)^0,w,c
   623  00017E  0A80               	xorlw	128
   624  000180  582B               	subwfb	(??_WS_RYGCBM+4)^0,w,c
   625  000182  A0D8               	btfss	status,0,c
   626  000184  EFC6  F000         	goto	u491
   627  000188  EFC8  F000         	goto	u490
   628  00018C                     u491:
   629  00018C  EF46  F000         	goto	l1289
   630  000190                     u490:
   631  000190  EF8D  F001         	goto	l1343
   632  000194                     l1295:
   633                           
   634                           ;WS2812b/BitBangWS2812b.c: 109:     {;WS2812b/BitBangWS2812b.c: 110:         WS_dim(0xFF
      +                          , 0x00, 0x00, brightness);
   635  000194  0E00               	movlw	0
   636  000196  6E19               	movwf	(WS_dim@A+1)^0,c
   637  000198  6818               	setf	WS_dim@A^0,c
   638  00019A  0E00               	movlw	0
   639  00019C  6E1B               	movwf	(WS_dim@B+1)^0,c
   640  00019E  0E00               	movlw	0
   641  0001A0  6E1A               	movwf	WS_dim@B^0,c
   642  0001A2  0E00               	movlw	0
   643  0001A4  6E1D               	movwf	(WS_dim@C+1)^0,c
   644  0001A6  0E00               	movlw	0
   645  0001A8  6E1C               	movwf	WS_dim@C^0,c
   646  0001AA  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   647  0001AE  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   648  0001B2  EC32  F002         	call	_WS_dim	;wreg free
   649  0001B6                     
   650                           ;WS2812b/BitBangWS2812b.c: 111:         b++;
   651  0001B6  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   652  0001B8  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   653  0001BA                     
   654                           ;WS2812b/BitBangWS2812b.c: 112:         if(b == length) break;
   655  0001BA  5023               	movf	WS_RYGCBM@length^0,w,c
   656  0001BC  182C               	xorwf	WS_RYGCBM@b^0,w,c
   657  0001BE  E107               	bnz	u501
   658  0001C0  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   659  0001C2  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   660  0001C4  A4D8               	btfss	status,2,c
   661  0001C6  EFE7  F000         	goto	u501
   662  0001CA  EFE9  F000         	goto	u500
   663  0001CE                     u501:
   664  0001CE  EFEB  F000         	goto	l1303
   665  0001D2                     u500:
   666  0001D2  EF9C  F001         	goto	l1345
   667  0001D6                     l1303:
   668                           
   669                           ;WS2812b/BitBangWS2812b.c: 113:         WS_dim(0xFF, 0xFF, 0x00, brightness);
   670  0001D6  0E00               	movlw	0
   671  0001D8  6E19               	movwf	(WS_dim@A+1)^0,c
   672  0001DA  6818               	setf	WS_dim@A^0,c
   673  0001DC  0E00               	movlw	0
   674  0001DE  6E1B               	movwf	(WS_dim@B+1)^0,c
   675  0001E0  681A               	setf	WS_dim@B^0,c
   676  0001E2  0E00               	movlw	0
   677  0001E4  6E1D               	movwf	(WS_dim@C+1)^0,c
   678  0001E6  0E00               	movlw	0
   679  0001E8  6E1C               	movwf	WS_dim@C^0,c
   680  0001EA  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   681  0001EE  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   682  0001F2  EC32  F002         	call	_WS_dim	;wreg free
   683  0001F6                     
   684                           ;WS2812b/BitBangWS2812b.c: 114:         b++;
   685  0001F6  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   686  0001F8  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   687  0001FA                     
   688                           ;WS2812b/BitBangWS2812b.c: 115:         if(b == length) break;
   689  0001FA  5023               	movf	WS_RYGCBM@length^0,w,c
   690  0001FC  182C               	xorwf	WS_RYGCBM@b^0,w,c
   691  0001FE  E107               	bnz	u511
   692  000200  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   693  000202  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   694  000204  A4D8               	btfss	status,2,c
   695  000206  EF07  F001         	goto	u511
   696  00020A  EF09  F001         	goto	u510
   697  00020E                     u511:
   698  00020E  EF0B  F001         	goto	l1311
   699  000212                     u510:
   700  000212  EF9C  F001         	goto	l1345
   701  000216                     l1311:
   702                           
   703                           ;WS2812b/BitBangWS2812b.c: 116:         WS_dim(0x00, 0xFF, 0x00, brightness);
   704  000216  0E00               	movlw	0
   705  000218  6E19               	movwf	(WS_dim@A+1)^0,c
   706  00021A  0E00               	movlw	0
   707  00021C  6E18               	movwf	WS_dim@A^0,c
   708  00021E  0E00               	movlw	0
   709  000220  6E1B               	movwf	(WS_dim@B+1)^0,c
   710  000222  681A               	setf	WS_dim@B^0,c
   711  000224  0E00               	movlw	0
   712  000226  6E1D               	movwf	(WS_dim@C+1)^0,c
   713  000228  0E00               	movlw	0
   714  00022A  6E1C               	movwf	WS_dim@C^0,c
   715  00022C  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   716  000230  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   717  000234  EC32  F002         	call	_WS_dim	;wreg free
   718  000238                     
   719                           ;WS2812b/BitBangWS2812b.c: 117:         b++;
   720  000238  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   721  00023A  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   722  00023C                     
   723                           ;WS2812b/BitBangWS2812b.c: 118:         if(b == length) break;
   724  00023C  5023               	movf	WS_RYGCBM@length^0,w,c
   725  00023E  182C               	xorwf	WS_RYGCBM@b^0,w,c
   726  000240  E107               	bnz	u521
   727  000242  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   728  000244  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   729  000246  A4D8               	btfss	status,2,c
   730  000248  EF28  F001         	goto	u521
   731  00024C  EF2A  F001         	goto	u520
   732  000250                     u521:
   733  000250  EF2C  F001         	goto	l1319
   734  000254                     u520:
   735  000254  EF9C  F001         	goto	l1345
   736  000258                     l1319:
   737                           
   738                           ;WS2812b/BitBangWS2812b.c: 119:         WS_dim(0x00, 0xFF, 0xFF, brightness);
   739  000258  0E00               	movlw	0
   740  00025A  6E19               	movwf	(WS_dim@A+1)^0,c
   741  00025C  0E00               	movlw	0
   742  00025E  6E18               	movwf	WS_dim@A^0,c
   743  000260  0E00               	movlw	0
   744  000262  6E1B               	movwf	(WS_dim@B+1)^0,c
   745  000264  681A               	setf	WS_dim@B^0,c
   746  000266  0E00               	movlw	0
   747  000268  6E1D               	movwf	(WS_dim@C+1)^0,c
   748  00026A  681C               	setf	WS_dim@C^0,c
   749  00026C  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   750  000270  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   751  000274  EC32  F002         	call	_WS_dim	;wreg free
   752  000278                     
   753                           ;WS2812b/BitBangWS2812b.c: 120:         b++;
   754  000278  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   755  00027A  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   756  00027C                     
   757                           ;WS2812b/BitBangWS2812b.c: 121:         if(b == length) break;
   758  00027C  5023               	movf	WS_RYGCBM@length^0,w,c
   759  00027E  182C               	xorwf	WS_RYGCBM@b^0,w,c
   760  000280  E107               	bnz	u531
   761  000282  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   762  000284  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   763  000286  A4D8               	btfss	status,2,c
   764  000288  EF48  F001         	goto	u531
   765  00028C  EF4A  F001         	goto	u530
   766  000290                     u531:
   767  000290  EF4C  F001         	goto	l1327
   768  000294                     u530:
   769  000294  EF9C  F001         	goto	l1345
   770  000298                     l1327:
   771                           
   772                           ;WS2812b/BitBangWS2812b.c: 122:         WS_dim(0x00, 0x00, 0xFF, brightness);
   773  000298  0E00               	movlw	0
   774  00029A  6E19               	movwf	(WS_dim@A+1)^0,c
   775  00029C  0E00               	movlw	0
   776  00029E  6E18               	movwf	WS_dim@A^0,c
   777  0002A0  0E00               	movlw	0
   778  0002A2  6E1B               	movwf	(WS_dim@B+1)^0,c
   779  0002A4  0E00               	movlw	0
   780  0002A6  6E1A               	movwf	WS_dim@B^0,c
   781  0002A8  0E00               	movlw	0
   782  0002AA  6E1D               	movwf	(WS_dim@C+1)^0,c
   783  0002AC  681C               	setf	WS_dim@C^0,c
   784  0002AE  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   785  0002B2  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   786  0002B6  EC32  F002         	call	_WS_dim	;wreg free
   787  0002BA                     
   788                           ;WS2812b/BitBangWS2812b.c: 123:         b++;
   789  0002BA  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   790  0002BC  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   791  0002BE                     
   792                           ;WS2812b/BitBangWS2812b.c: 124:         if(b == length) break;
   793  0002BE  5023               	movf	WS_RYGCBM@length^0,w,c
   794  0002C0  182C               	xorwf	WS_RYGCBM@b^0,w,c
   795  0002C2  E107               	bnz	u541
   796  0002C4  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   797  0002C6  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   798  0002C8  A4D8               	btfss	status,2,c
   799  0002CA  EF69  F001         	goto	u541
   800  0002CE  EF6B  F001         	goto	u540
   801  0002D2                     u541:
   802  0002D2  EF6D  F001         	goto	l1335
   803  0002D6                     u540:
   804  0002D6  EF9C  F001         	goto	l1345
   805  0002DA                     l1335:
   806                           
   807                           ;WS2812b/BitBangWS2812b.c: 125:         WS_dim(0xFF, 0x00, 0xFF, brightness);
   808  0002DA  0E00               	movlw	0
   809  0002DC  6E19               	movwf	(WS_dim@A+1)^0,c
   810  0002DE  6818               	setf	WS_dim@A^0,c
   811  0002E0  0E00               	movlw	0
   812  0002E2  6E1B               	movwf	(WS_dim@B+1)^0,c
   813  0002E4  0E00               	movlw	0
   814  0002E6  6E1A               	movwf	WS_dim@B^0,c
   815  0002E8  0E00               	movlw	0
   816  0002EA  6E1D               	movwf	(WS_dim@C+1)^0,c
   817  0002EC  681C               	setf	WS_dim@C^0,c
   818  0002EE  C025  F01E         	movff	WS_RYGCBM@brightness,WS_dim@brightness
   819  0002F2  C026  F01F         	movff	WS_RYGCBM@brightness+1,WS_dim@brightness+1
   820  0002F6  EC32  F002         	call	_WS_dim	;wreg free
   821  0002FA                     
   822                           ;WS2812b/BitBangWS2812b.c: 126:         b++;
   823  0002FA  4A2C               	infsnz	WS_RYGCBM@b^0,f,c
   824  0002FC  2A2D               	incf	(WS_RYGCBM@b+1)^0,f,c
   825  0002FE                     
   826                           ;WS2812b/BitBangWS2812b.c: 127:         if(b == length) break;
   827  0002FE  5023               	movf	WS_RYGCBM@length^0,w,c
   828  000300  182C               	xorwf	WS_RYGCBM@b^0,w,c
   829  000302  E107               	bnz	u551
   830  000304  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   831  000306  182D               	xorwf	(WS_RYGCBM@b+1)^0,w,c
   832  000308  A4D8               	btfss	status,2,c
   833  00030A  EF89  F001         	goto	u551
   834  00030E  EF8B  F001         	goto	u550
   835  000312                     u551:
   836  000312  EF8D  F001         	goto	l1343
   837  000316                     u550:
   838  000316  EF9C  F001         	goto	l1345
   839  00031A                     l1343:
   840                           
   841                           ;WS2812b/BitBangWS2812b.c: 108:     while(b < length)
   842  00031A  5023               	movf	WS_RYGCBM@length^0,w,c
   843  00031C  5C2C               	subwf	WS_RYGCBM@b^0,w,c
   844  00031E  502D               	movf	(WS_RYGCBM@b+1)^0,w,c
   845  000320  0A80               	xorlw	128
   846  000322  6E27               	movwf	??_WS_RYGCBM^0,c
   847  000324  5024               	movf	(WS_RYGCBM@length+1)^0,w,c
   848  000326  0A80               	xorlw	128
   849  000328  5827               	subwfb	??_WS_RYGCBM^0,w,c
   850  00032A  A0D8               	btfss	status,0,c
   851  00032C  EF9A  F001         	goto	u561
   852  000330  EF9C  F001         	goto	u560
   853  000334                     u561:
   854  000334  EFCA  F000         	goto	l1295
   855  000338                     u560:
   856  000338                     l1345:
   857                           
   858                           ;WS2812b/BitBangWS2812b.c: 129:     _delay((unsigned long)((0.280)*(32000000/4000.0)));
   859  000338  0E03               	movlw	3
   860  00033A  6E27               	movwf	??_WS_RYGCBM^0,c
   861  00033C  0EE8               	movlw	232
   862  00033E                     u697:
   863  00033E  2EE8               	decfsz	wreg,f,c
   864  000340  D7FE               	bra	u697
   865  000342  2E27               	decfsz	??_WS_RYGCBM^0,f,c
   866  000344  D7FC               	bra	u697
   867  000346  0012               	return		;funcret
   868  000348                     __end_of_WS_RYGCBM:
   869                           	callstack 0
   870                           
   871 ;; *************** function _WS_dim *****************
   872 ;; Defined at:
   873 ;;		line 10 in file "WS2812b/BitBangWS2812b.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  A               2   23[COMRAM] int 
   876 ;;  B               2   25[COMRAM] int 
   877 ;;  C               2   27[COMRAM] int 
   878 ;;  brightness      2   29[COMRAM] int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  f               2   32[COMRAM] int 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1
   890 ;;      Params:         8       0       0
   891 ;;      Locals:         2       0       0
   892 ;;      Temps:          1       0       0
   893 ;;      Totals:        11       0       0
   894 ;;Total ram usage:       11 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    5
   897 ;; This function calls:
   898 ;;		_WS_Word
   899 ;;		___wmul
   900 ;; This function is called by:
   901 ;;		_WS_RYGCBM
   902 ;;		_WS_White
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text3
   907  000464                     __ptext3:
   908                           	callstack 0
   909  000464                     _WS_dim:
   910                           	callstack 23
   911  000464                     
   912                           ;WS2812b/BitBangWS2812b.c: 10: void WS_dim(int A, int B, int C, int brightness);WS2812b/
      +                          BitBangWS2812b.c: 11: {;WS2812b/BitBangWS2812b.c: 12:     int f = 255 - 5*brightness;
   913  000464  C01E  F003         	movff	WS_dim@brightness,___wmul@multiplier
   914  000468  C01F  F004         	movff	WS_dim@brightness+1,___wmul@multiplier+1
   915  00046C  0EFF               	movlw	255
   916  00046E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   917  000470  0EFB               	movlw	251
   918  000472  6E05               	movwf	___wmul@multiplicand^0,c
   919  000474  EC26  F003         	call	___wmul	;wreg free
   920  000478  0EFF               	movlw	255
   921  00047A  2403               	addwf	?___wmul^0,w,c
   922  00047C  6E21               	movwf	WS_dim@f^0,c
   923  00047E  0E00               	movlw	0
   924  000480  2004               	addwfc	(?___wmul+1)^0,w,c
   925  000482  6E22               	movwf	(WS_dim@f+1)^0,c
   926  000484                     
   927                           ;WS2812b/BitBangWS2812b.c: 13:     if( A >=f )
   928  000484  5021               	movf	WS_dim@f^0,w,c
   929  000486  5C18               	subwf	WS_dim@A^0,w,c
   930  000488  5019               	movf	(WS_dim@A+1)^0,w,c
   931  00048A  0A80               	xorlw	128
   932  00048C  6E20               	movwf	??_WS_dim^0,c
   933  00048E  5022               	movf	(WS_dim@f+1)^0,w,c
   934  000490  0A80               	xorlw	128
   935  000492  5820               	subwfb	??_WS_dim^0,w,c
   936  000494  A0D8               	btfss	status,0,c
   937  000496  EF4F  F002         	goto	u461
   938  00049A  EF51  F002         	goto	u460
   939  00049E                     u461:
   940  00049E  EF57  F002         	goto	l67
   941  0004A2                     u460:
   942  0004A2                     
   943                           ;WS2812b/BitBangWS2812b.c: 14:     {;WS2812b/BitBangWS2812b.c: 15:         A = A - f;
   944  0004A2  5021               	movf	WS_dim@f^0,w,c
   945  0004A4  5C18               	subwf	WS_dim@A^0,w,c
   946  0004A6  6E18               	movwf	WS_dim@A^0,c
   947  0004A8  5022               	movf	(WS_dim@f+1)^0,w,c
   948  0004AA  5819               	subwfb	(WS_dim@A+1)^0,w,c
   949  0004AC  6E19               	movwf	(WS_dim@A+1)^0,c
   950  0004AE                     l67:
   951                           
   952                           ;WS2812b/BitBangWS2812b.c: 17:     if( B >=f )
   953  0004AE  5021               	movf	WS_dim@f^0,w,c
   954  0004B0  5C1A               	subwf	WS_dim@B^0,w,c
   955  0004B2  501B               	movf	(WS_dim@B+1)^0,w,c
   956  0004B4  0A80               	xorlw	128
   957  0004B6  6E20               	movwf	??_WS_dim^0,c
   958  0004B8  5022               	movf	(WS_dim@f+1)^0,w,c
   959  0004BA  0A80               	xorlw	128
   960  0004BC  5820               	subwfb	??_WS_dim^0,w,c
   961  0004BE  A0D8               	btfss	status,0,c
   962  0004C0  EF64  F002         	goto	u471
   963  0004C4  EF66  F002         	goto	u470
   964  0004C8                     u471:
   965  0004C8  EF6C  F002         	goto	l68
   966  0004CC                     u470:
   967  0004CC                     
   968                           ;WS2812b/BitBangWS2812b.c: 18:     {;WS2812b/BitBangWS2812b.c: 19:         B = B - f;
   969  0004CC  5021               	movf	WS_dim@f^0,w,c
   970  0004CE  5C1A               	subwf	WS_dim@B^0,w,c
   971  0004D0  6E1A               	movwf	WS_dim@B^0,c
   972  0004D2  5022               	movf	(WS_dim@f+1)^0,w,c
   973  0004D4  581B               	subwfb	(WS_dim@B+1)^0,w,c
   974  0004D6  6E1B               	movwf	(WS_dim@B+1)^0,c
   975  0004D8                     l68:
   976                           
   977                           ;WS2812b/BitBangWS2812b.c: 21:     if( C >=f )
   978  0004D8  5021               	movf	WS_dim@f^0,w,c
   979  0004DA  5C1C               	subwf	WS_dim@C^0,w,c
   980  0004DC  501D               	movf	(WS_dim@C+1)^0,w,c
   981  0004DE  0A80               	xorlw	128
   982  0004E0  6E20               	movwf	??_WS_dim^0,c
   983  0004E2  5022               	movf	(WS_dim@f+1)^0,w,c
   984  0004E4  0A80               	xorlw	128
   985  0004E6  5820               	subwfb	??_WS_dim^0,w,c
   986  0004E8  A0D8               	btfss	status,0,c
   987  0004EA  EF79  F002         	goto	u481
   988  0004EE  EF7B  F002         	goto	u480
   989  0004F2                     u481:
   990  0004F2  EF81  F002         	goto	l1277
   991  0004F6                     u480:
   992  0004F6                     
   993                           ;WS2812b/BitBangWS2812b.c: 22:     {;WS2812b/BitBangWS2812b.c: 23:         C = C - f;
   994  0004F6  5021               	movf	WS_dim@f^0,w,c
   995  0004F8  5C1C               	subwf	WS_dim@C^0,w,c
   996  0004FA  6E1C               	movwf	WS_dim@C^0,c
   997  0004FC  5022               	movf	(WS_dim@f+1)^0,w,c
   998  0004FE  581D               	subwfb	(WS_dim@C+1)^0,w,c
   999  000500  6E1D               	movwf	(WS_dim@C+1)^0,c
  1000  000502                     l1277:
  1001                           
  1002                           ;WS2812b/BitBangWS2812b.c: 25:     WS_Word(A, B, C);
  1003  000502  C018  F005         	movff	WS_dim@A,WS_Word@A
  1004  000506  C019  F006         	movff	WS_dim@A+1,WS_Word@A+1
  1005  00050A  C01A  F007         	movff	WS_dim@B,WS_Word@B
  1006  00050E  C01B  F008         	movff	WS_dim@B+1,WS_Word@B+1
  1007  000512  C01C  F009         	movff	WS_dim@C,WS_Word@C
  1008  000516  C01D  F00A         	movff	WS_dim@C+1,WS_Word@C+1
  1009  00051A  ECA4  F001         	call	_WS_Word	;wreg free
  1010  00051E  0012               	return		;funcret
  1011  000520                     __end_of_WS_dim:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function ___wmul *****************
  1015 ;; Defined at:
  1016 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  multiplier      2    2[COMRAM] unsigned int 
  1019 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  product         2    6[COMRAM] unsigned int 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2    2[COMRAM] unsigned int 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, prodl, prodh
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1
  1031 ;;      Params:         4       0       0
  1032 ;;      Locals:         2       0       0
  1033 ;;      Temps:          0       0       0
  1034 ;;      Totals:         6       0       0
  1035 ;;Total ram usage:        6 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    3
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_WS_dim
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text4
  1046  00064C                     __ptext4:
  1047                           	callstack 0
  1048  00064C                     ___wmul:
  1049                           	callstack 24
  1050  00064C  5003               	movf	___wmul@multiplier^0,w,c
  1051  00064E  0205               	mulwf	___wmul@multiplicand^0,c
  1052  000650  CFF3 F007          	movff	prodl,___wmul@product
  1053  000654  CFF4 F008          	movff	prodh,___wmul@product+1
  1054  000658  5003               	movf	___wmul@multiplier^0,w,c
  1055  00065A  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1056  00065C  50F3               	movf	243,w,c
  1057  00065E  2608               	addwf	(___wmul@product+1)^0,f,c
  1058  000660  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1059  000662  0205               	mulwf	___wmul@multiplicand^0,c
  1060  000664  50F3               	movf	243,w,c
  1061  000666  2608               	addwf	(___wmul@product+1)^0,f,c
  1062  000668  C007  F003         	movff	___wmul@product,?___wmul
  1063  00066C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1064  000670  0012               	return		;funcret
  1065  000672                     __end_of___wmul:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _WS_Word *****************
  1069 ;; Defined at:
  1070 ;;		line 28 in file "WS2812b/BitBangWS2812b.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  A               2    4[COMRAM] int 
  1073 ;;  B               2    6[COMRAM] int 
  1074 ;;  C               2    8[COMRAM] int 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  x               2   17[COMRAM] int 
  1077 ;;  x               2   15[COMRAM] int 
  1078 ;;  x               2   13[COMRAM] int 
  1079 ;;  i               2   21[COMRAM] int 
  1080 ;;  Bx              2   19[COMRAM] int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1
  1090 ;;      Params:         6       0       0
  1091 ;;      Locals:        10       0       0
  1092 ;;      Temps:          3       0       0
  1093 ;;      Totals:        19       0       0
  1094 ;;Total ram usage:       19 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    4
  1097 ;; This function calls:
  1098 ;;		_WS_Write
  1099 ;; This function is called by:
  1100 ;;		_WS_dim
  1101 ;;		_WSTest
  1102 ;;		_WSLoop
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text5
  1107  000348                     __ptext5:
  1108                           	callstack 0
  1109  000348                     _WS_Word:
  1110                           	callstack 23
  1111  000348                     
  1112                           ;WS2812b/BitBangWS2812b.c: 37:     for(int i=23; i!=-1; i--)
  1113  000348  0E00               	movlw	0
  1114  00034A  6E17               	movwf	(WS_Word@i+1)^0,c
  1115  00034C  0E17               	movlw	23
  1116  00034E  6E16               	movwf	WS_Word@i^0,c
  1117  000350                     l1239:
  1118                           
  1119                           ;WS2812b/BitBangWS2812b.c: 38:     {;WS2812b/BitBangWS2812b.c: 39:         if(i>15)
  1120  000350  BE17               	btfsc	(WS_Word@i+1)^0,7,c
  1121  000352  EFB4  F001         	goto	u391
  1122  000356  5017               	movf	(WS_Word@i+1)^0,w,c
  1123  000358  E109               	bnz	u390
  1124  00035A  0E10               	movlw	16
  1125  00035C  5C16               	subwf	WS_Word@i^0,w,c
  1126  00035E  A0D8               	btfss	status,0,c
  1127  000360  EFB4  F001         	goto	u391
  1128  000364  EFB6  F001         	goto	u390
  1129  000368                     u391:
  1130  000368  EFD1  F001         	goto	l1243
  1131  00036C                     u390:
  1132  00036C                     
  1133                           ;WS2812b/BitBangWS2812b.c: 40:         {;WS2812b/BitBangWS2812b.c: 41:             int x
      +                           = i - 16;
  1134  00036C  0EF0               	movlw	240
  1135  00036E  2416               	addwf	WS_Word@i^0,w,c
  1136  000370  6E0E               	movwf	WS_Word@x^0,c
  1137  000372  0EFF               	movlw	255
  1138  000374  2017               	addwfc	(WS_Word@i+1)^0,w,c
  1139  000376  6E0F               	movwf	(WS_Word@x+1)^0,c
  1140                           
  1141                           ;WS2812b/BitBangWS2812b.c: 42:             Bx = 1 & ( A >> x );
  1142  000378  C00E  F00B         	movff	WS_Word@x,??_WS_Word
  1143  00037C  C005  F00C         	movff	WS_Word@A,??_WS_Word+1
  1144  000380  C006  F00D         	movff	WS_Word@A+1,??_WS_Word+2
  1145  000384  2A0B               	incf	??_WS_Word^0,f,c
  1146  000386  EFC8  F001         	goto	u404
  1147  00038A                     u405:
  1148  00038A  340D               	rlcf	(??_WS_Word+2)^0,w,c
  1149  00038C  320D               	rrcf	(??_WS_Word+2)^0,f,c
  1150  00038E  320C               	rrcf	(??_WS_Word+1)^0,f,c
  1151  000390                     u404:
  1152  000390  2E0B               	decfsz	??_WS_Word^0,f,c
  1153  000392  EFC5  F001         	goto	u405
  1154  000396  0E01               	movlw	1
  1155  000398  140C               	andwf	(??_WS_Word+1)^0,w,c
  1156  00039A  6E14               	movwf	WS_Word@Bx^0,c
  1157  00039C  6A15               	clrf	(WS_Word@Bx+1)^0,c
  1158                           
  1159                           ;WS2812b/BitBangWS2812b.c: 43:         }
  1160  00039E  EF1E  F002         	goto	l1255
  1161  0003A2                     l1243:
  1162  0003A2  BE17               	btfsc	(WS_Word@i+1)^0,7,c
  1163  0003A4  EFDD  F001         	goto	u411
  1164  0003A8  5017               	movf	(WS_Word@i+1)^0,w,c
  1165  0003AA  E109               	bnz	u410
  1166  0003AC  0E08               	movlw	8
  1167  0003AE  5C16               	subwf	WS_Word@i^0,w,c
  1168  0003B0  A0D8               	btfss	status,0,c
  1169  0003B2  EFDD  F001         	goto	u411
  1170  0003B6  EFDF  F001         	goto	u410
  1171  0003BA                     u411:
  1172  0003BA  EFFA  F001         	goto	l1247
  1173  0003BE                     u410:
  1174  0003BE                     
  1175                           ;WS2812b/BitBangWS2812b.c: 45:         {;WS2812b/BitBangWS2812b.c: 46:             int x
      +                           = i - 8;
  1176  0003BE  0EF8               	movlw	248
  1177  0003C0  2416               	addwf	WS_Word@i^0,w,c
  1178  0003C2  6E10               	movwf	WS_Word@x_248^0,c
  1179  0003C4  0EFF               	movlw	255
  1180  0003C6  2017               	addwfc	(WS_Word@i+1)^0,w,c
  1181  0003C8  6E11               	movwf	(WS_Word@x_248+1)^0,c
  1182                           
  1183                           ;WS2812b/BitBangWS2812b.c: 47:             Bx = 0b00000001 & ( B >> x );
  1184  0003CA  C010  F00B         	movff	WS_Word@x_248,??_WS_Word
  1185  0003CE  C007  F00C         	movff	WS_Word@B,??_WS_Word+1
  1186  0003D2  C008  F00D         	movff	WS_Word@B+1,??_WS_Word+2
  1187  0003D6  2A0B               	incf	??_WS_Word^0,f,c
  1188  0003D8  EFF1  F001         	goto	u424
  1189  0003DC                     u425:
  1190  0003DC  340D               	rlcf	(??_WS_Word+2)^0,w,c
  1191  0003DE  320D               	rrcf	(??_WS_Word+2)^0,f,c
  1192  0003E0  320C               	rrcf	(??_WS_Word+1)^0,f,c
  1193  0003E2                     u424:
  1194  0003E2  2E0B               	decfsz	??_WS_Word^0,f,c
  1195  0003E4  EFEE  F001         	goto	u425
  1196  0003E8  0E01               	movlw	1
  1197  0003EA  140C               	andwf	(??_WS_Word+1)^0,w,c
  1198  0003EC  6E14               	movwf	WS_Word@Bx^0,c
  1199  0003EE  6A15               	clrf	(WS_Word@Bx+1)^0,c
  1200                           
  1201                           ;WS2812b/BitBangWS2812b.c: 48:         }
  1202  0003F0  EF1E  F002         	goto	l1255
  1203  0003F4                     l1247:
  1204  0003F4  BE17               	btfsc	(WS_Word@i+1)^0,7,c
  1205  0003F6  EFFF  F001         	goto	u431
  1206  0003FA  EF01  F002         	goto	u430
  1207  0003FE                     u431:
  1208  0003FE  EF1A  F002         	goto	l1253
  1209  000402                     u430:
  1210  000402                     
  1211                           ;WS2812b/BitBangWS2812b.c: 50:         {;WS2812b/BitBangWS2812b.c: 51:             int x
      +                           = i;
  1212  000402  C016  F012         	movff	WS_Word@i,WS_Word@x_249
  1213  000406  C017  F013         	movff	WS_Word@i+1,WS_Word@x_249+1
  1214  00040A                     
  1215                           ;WS2812b/BitBangWS2812b.c: 52:             Bx = 0b00000001 & ( C >> x );
  1216  00040A  C012  F00B         	movff	WS_Word@x_249,??_WS_Word
  1217  00040E  C009  F00C         	movff	WS_Word@C,??_WS_Word+1
  1218  000412  C00A  F00D         	movff	WS_Word@C+1,??_WS_Word+2
  1219  000416  2A0B               	incf	??_WS_Word^0,f,c
  1220  000418  EF11  F002         	goto	u444
  1221  00041C                     u445:
  1222  00041C  340D               	rlcf	(??_WS_Word+2)^0,w,c
  1223  00041E  320D               	rrcf	(??_WS_Word+2)^0,f,c
  1224  000420  320C               	rrcf	(??_WS_Word+1)^0,f,c
  1225  000422                     u444:
  1226  000422  2E0B               	decfsz	??_WS_Word^0,f,c
  1227  000424  EF0E  F002         	goto	u445
  1228  000428  0E01               	movlw	1
  1229  00042A  140C               	andwf	(??_WS_Word+1)^0,w,c
  1230  00042C  6E14               	movwf	WS_Word@Bx^0,c
  1231  00042E  6A15               	clrf	(WS_Word@Bx+1)^0,c
  1232                           
  1233                           ;WS2812b/BitBangWS2812b.c: 53:         }
  1234  000430  EF1E  F002         	goto	l1255
  1235  000434                     l1253:
  1236                           
  1237                           ;WS2812b/BitBangWS2812b.c: 55:         {;WS2812b/BitBangWS2812b.c: 56:             Bx = 
      +                          1;
  1238  000434  0E00               	movlw	0
  1239  000436  6E15               	movwf	(WS_Word@Bx+1)^0,c
  1240  000438  0E01               	movlw	1
  1241  00043A  6E14               	movwf	WS_Word@Bx^0,c
  1242  00043C                     l1255:
  1243                           
  1244                           ;WS2812b/BitBangWS2812b.c: 58:         WS_Write(Bx);
  1245  00043C  C014  F003         	movff	WS_Word@Bx,WS_Write@A
  1246  000440  C015  F004         	movff	WS_Word@Bx+1,WS_Write@A+1
  1247  000444  EC39  F003         	call	_WS_Write	;wreg free
  1248  000448                     
  1249                           ;WS2812b/BitBangWS2812b.c: 59:     }
  1250  000448  0616               	decf	WS_Word@i^0,f,c
  1251  00044A  A0D8               	btfss	status,0,c
  1252  00044C  0617               	decf	(WS_Word@i+1)^0,f,c
  1253  00044E  2816               	incf	WS_Word@i^0,w,c
  1254  000450  E106               	bnz	u451
  1255  000452  2817               	incf	(WS_Word@i+1)^0,w,c
  1256  000454  A4D8               	btfss	status,2,c
  1257  000456  EF2F  F002         	goto	u451
  1258  00045A  EF31  F002         	goto	u450
  1259  00045E                     u451:
  1260  00045E  EFA8  F001         	goto	l1239
  1261  000462                     u450:
  1262  000462  0012               	return		;funcret
  1263  000464                     __end_of_WS_Word:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _WS_Write *****************
  1267 ;; Defined at:
  1268 ;;		line 63 in file "WS2812b/BitBangWS2812b.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  A               2    2[COMRAM] int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1
  1282 ;;      Params:         2       0       0
  1283 ;;      Locals:         0       0       0
  1284 ;;      Temps:          0       0       0
  1285 ;;      Totals:         2       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    3
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_WS_Word
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text6
  1297  000672                     __ptext6:
  1298                           	callstack 0
  1299  000672                     _WS_Write:
  1300                           	callstack 23
  1301  000672                     
  1302                           ;WS2812b/BitBangWS2812b.c: 63: void WS_Write( int A );WS2812b/BitBangWS2812b.c: 64: {;WS
      +                          2812b/BitBangWS2812b.c: 65:     if(A)
  1303  000672  5003               	movf	WS_Write@A^0,w,c
  1304  000674  1004               	iorwf	(WS_Write@A+1)^0,w,c
  1305  000676  B4D8               	btfsc	status,2,c
  1306  000678  EF40  F003         	goto	u381
  1307  00067C  EF42  F003         	goto	u380
  1308  000680                     u381:
  1309  000680  EF49  F003         	goto	l84
  1310  000684                     u380:
  1311  000684                     
  1312                           ;WS2812b/BitBangWS2812b.c: 66:     {;WS2812b/BitBangWS2812b.c: 67:         LATAbits.LATA
      +                          2 = 1;
  1313  000684  8489               	bsf	137,2,c	;volatile
  1314                           
  1315                           ;WS2812b/BitBangWS2812b.c: 68:         __nop();
  1316  000686  F000               	nop	
  1317                           
  1318                           ;WS2812b/BitBangWS2812b.c: 69:         __nop();
  1319  000688  F000               	nop	
  1320                           
  1321                           ;WS2812b/BitBangWS2812b.c: 70:         __nop();
  1322  00068A  F000               	nop	
  1323                           
  1324                           ;WS2812b/BitBangWS2812b.c: 71:         LATAbits.LATA2 = 0;
  1325  00068C  9489               	bcf	137,2,c	;volatile
  1326                           
  1327                           ;WS2812b/BitBangWS2812b.c: 72:     }
  1328  00068E  EF4B  F003         	goto	l86
  1329  000692                     l84:
  1330                           
  1331                           ;WS2812b/BitBangWS2812b.c: 74:     {;WS2812b/BitBangWS2812b.c: 75:         LATAbits.LATA
      +                          2 = 1;
  1332  000692  8489               	bsf	137,2,c	;volatile
  1333                           
  1334                           ;WS2812b/BitBangWS2812b.c: 76:         LATAbits.LATA2 = 0;
  1335  000694  9489               	bcf	137,2,c	;volatile
  1336  000696                     l86:
  1337  000696  0012               	return		;funcret
  1338  000698                     __end_of_WS_Write:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _SYSTEM_Initialize *****************
  1342 ;; Defined at:
  1343 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1
  1357 ;;      Params:         0       0       0
  1358 ;;      Locals:         0       0       0
  1359 ;;      Temps:          0       0       0
  1360 ;;      Totals:         0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    5
  1364 ;; This function calls:
  1365 ;;		_ADC1_Initialize
  1366 ;;		_INTERRUPT_Initialize
  1367 ;;		_OSCILLATOR_Initialize
  1368 ;;		_PIN_MANAGER_Initialize
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text7
  1375  0006BC                     __ptext7:
  1376                           	callstack 0
  1377  0006BC                     _SYSTEM_Initialize:
  1378                           	callstack 25
  1379  0006BC                     
  1380                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1381  0006BC  EC7A  F003         	call	_INTERRUPT_Initialize	;wreg free
  1382  0006C0                     
  1383                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1384  0006C0  ECFC  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1385  0006C4                     
  1386                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1387  0006C4  EC6E  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1388  0006C8                     
  1389                           ;mcc_generated_files/mcc.c: 56:     ADC1_Initialize();
  1390  0006C8  EC4C  F003         	call	_ADC1_Initialize	;wreg free
  1391  0006CC  0012               	return		;funcret
  1392  0006CE                     __end_of_SYSTEM_Initialize:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _PIN_MANAGER_Initialize *****************
  1396 ;; Defined at:
  1397 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1
  1411 ;;      Params:         0       0       0
  1412 ;;      Locals:         0       0       0
  1413 ;;      Temps:          0       0       0
  1414 ;;      Totals:         0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    3
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_SYSTEM_Initialize
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text8
  1426  0005F8                     __ptext8:
  1427                           	callstack 0
  1428  0005F8                     _PIN_MANAGER_Initialize:
  1429                           	callstack 26
  1430  0005F8                     
  1431                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1432  0005F8  0E00               	movlw	0
  1433  0005FA  6E89               	movwf	137,c	;volatile
  1434                           
  1435                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1436  0005FC  0E00               	movlw	0
  1437  0005FE  6E8A               	movwf	138,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1440  000600  0E00               	movlw	0
  1441  000602  6E8B               	movwf	139,c	;volatile
  1442                           
  1443                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x33;
  1444  000604  0E33               	movlw	51
  1445  000606  6E92               	movwf	146,c	;volatile
  1446                           
  1447                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  1448  000608  0EF0               	movlw	240
  1449  00060A  6E93               	movwf	147,c	;volatile
  1450  00060C                     
  1451                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  1452  00060C  6894               	setf	148,c	;volatile
  1453                           
  1454                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0xFB;
  1455  00060E  0EFB               	movlw	251
  1456  000610  6E7E               	movwf	126,c	;volatile
  1457                           
  1458                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x0F;
  1459  000612  0E0F               	movlw	15
  1460  000614  6E7F               	movwf	127,c	;volatile
  1461                           
  1462                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  1463  000616  0E00               	movlw	0
  1464  000618  6E78               	movwf	120,c	;volatile
  1465                           
  1466                           ;mcc_generated_files/pin_manager.c: 81:     WPUA = 0x00;
  1467  00061A  0E00               	movlw	0
  1468  00061C  6E77               	movwf	119,c	;volatile
  1469  00061E                     
  1470                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1471  00061E  8EF1               	bsf	241,7,c	;volatile
  1472  000620                     
  1473                           ;mcc_generated_files/pin_manager.c: 91:     INTCONbits.RABIE = 1;
  1474  000620  86F2               	bsf	242,3,c	;volatile
  1475  000622  0012               	return		;funcret
  1476  000624                     __end_of_PIN_MANAGER_Initialize:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _OSCILLATOR_Initialize *****************
  1480 ;; Defined at:
  1481 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1
  1495 ;;      Params:         0       0       0
  1496 ;;      Locals:         0       0       0
  1497 ;;      Temps:          0       0       0
  1498 ;;      Totals:         0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    3
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_SYSTEM_Initialize
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text9
  1510  0006DC                     __ptext9:
  1511                           	callstack 0
  1512  0006DC                     _OSCILLATOR_Initialize:
  1513                           	callstack 26
  1514  0006DC                     
  1515                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  1516  0006DC  0E70               	movlw	112
  1517  0006DE  6ED3               	movwf	211,c	;volatile
  1518                           
  1519                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  1520  0006E0  0E04               	movlw	4
  1521  0006E2  6ED2               	movwf	210,c	;volatile
  1522                           
  1523                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1524  0006E4  0E00               	movlw	0
  1525  0006E6  6E9B               	movwf	155,c	;volatile
  1526  0006E8  0012               	return		;funcret
  1527  0006EA                     __end_of_OSCILLATOR_Initialize:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _INTERRUPT_Initialize *****************
  1531 ;; Defined at:
  1532 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		None
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1
  1546 ;;      Params:         0       0       0
  1547 ;;      Locals:         0       0       0
  1548 ;;      Temps:          0       0       0
  1549 ;;      Totals:         0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    3
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_SYSTEM_Initialize
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text10
  1561  0006F4                     __ptext10:
  1562                           	callstack 0
  1563  0006F4                     _INTERRUPT_Initialize:
  1564                           	callstack 26
  1565  0006F4                     
  1566                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1567  0006F4  9ED0               	bcf	208,7,c	;volatile
  1568  0006F6  0012               	return		;funcret
  1569  0006F8                     __end_of_INTERRUPT_Initialize:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _ADC1_Initialize *****************
  1573 ;; Defined at:
  1574 ;;		line 62 in file "mcc_generated_files/adc1.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1
  1588 ;;      Params:         0       0       0
  1589 ;;      Locals:         0       0       0
  1590 ;;      Temps:          0       0       0
  1591 ;;      Totals:         0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		_ADC1_SetInterruptHandler
  1597 ;; This function is called by:
  1598 ;;		_SYSTEM_Initialize
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text11
  1603  000698                     __ptext11:
  1604                           	callstack 0
  1605  000698                     _ADC1_Initialize:
  1606                           	callstack 25
  1607  000698                     
  1608                           ;mcc_generated_files/adc1.c: 67:     ADCON1 = 0x00;
  1609  000698  0E00               	movlw	0
  1610  00069A  6EC1               	movwf	193,c	;volatile
  1611                           
  1612                           ;mcc_generated_files/adc1.c: 70:     ADCON2 = 0xB8;
  1613  00069C  0EB8               	movlw	184
  1614  00069E  6EC0               	movwf	192,c	;volatile
  1615                           
  1616                           ;mcc_generated_files/adc1.c: 73:     ADRESL = 0x00;
  1617  0006A0  0E00               	movlw	0
  1618  0006A2  6EC3               	movwf	195,c	;volatile
  1619                           
  1620                           ;mcc_generated_files/adc1.c: 76:     ADRESH = 0x00;
  1621  0006A4  0E00               	movlw	0
  1622  0006A6  6EC4               	movwf	196,c	;volatile
  1623                           
  1624                           ;mcc_generated_files/adc1.c: 79:     ADCON0 = 0x01;
  1625  0006A8  0E01               	movlw	1
  1626  0006AA  6EC2               	movwf	194,c	;volatile
  1627  0006AC                     
  1628                           ;mcc_generated_files/adc1.c: 82:     PIE1bits.ADIE = 1;
  1629  0006AC  8C9D               	bsf	157,6,c	;volatile
  1630  0006AE                     
  1631                           ;mcc_generated_files/adc1.c: 85:     ADC1_SetInterruptHandler(ADC1_DefaultInterruptHandl
      +                          er);
  1632  0006AE  0EFC               	movlw	low _ADC1_DefaultInterruptHandler
  1633  0006B0  6E03               	movwf	ADC1_SetInterruptHandler@InterruptHandler^0,c
  1634  0006B2  0E06               	movlw	high _ADC1_DefaultInterruptHandler
  1635  0006B4  6E04               	movwf	(ADC1_SetInterruptHandler@InterruptHandler+1)^0,c
  1636  0006B6  EC75  F003         	call	_ADC1_SetInterruptHandler	;wreg free
  1637  0006BA  0012               	return		;funcret
  1638  0006BC                     __end_of_ADC1_Initialize:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _ADC1_SetInterruptHandler *****************
  1642 ;; Defined at:
  1643 ;;		line 151 in file "mcc_generated_files/adc1.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1646 ;;		 -> ADC1_DefaultInterruptHandler(1), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1
  1658 ;;      Params:         2       0       0
  1659 ;;      Locals:         0       0       0
  1660 ;;      Temps:          0       0       0
  1661 ;;      Totals:         2       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    3
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_ADC1_Initialize
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text12
  1673  0006EA                     __ptext12:
  1674                           	callstack 0
  1675  0006EA                     _ADC1_SetInterruptHandler:
  1676                           	callstack 25
  1677  0006EA                     
  1678                           ;mcc_generated_files/adc1.c: 152:     ADC1_InterruptHandler = InterruptHandler;
  1679  0006EA  C003  F039         	movff	ADC1_SetInterruptHandler@InterruptHandler,_ADC1_InterruptHandler
  1680  0006EE  C004  F03A         	movff	ADC1_SetInterruptHandler@InterruptHandler+1,_ADC1_InterruptHandler+1
  1681  0006F2  0012               	return		;funcret
  1682  0006F4                     __end_of_ADC1_SetInterruptHandler:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _INTERRUPT_InterruptManager *****************
  1686 ;; Defined at:
  1687 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1
  1701 ;;      Params:         0       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          2       0       0
  1704 ;;      Totals:         2       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		_ADC1_ISR
  1710 ;;		_PIN_MANAGER_IOC
  1711 ;; This function is called by:
  1712 ;;		Interrupt level 2
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	intcode
  1717  000008                     __pintcode:
  1718                           	callstack 0
  1719  000008                     _INTERRUPT_InterruptManager:
  1720                           	callstack 23
  1721                           
  1722                           ;incstack = 0
  1723  000008  823B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1724  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1725  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1726  000012                     
  1727                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RABIE == 1 && INTCONbits
      +                          .RABIF == 1)
  1728  000012  A6F2               	btfss	242,3,c	;volatile
  1729  000014  EF0E  F000         	goto	i2u33_41
  1730  000018  EF10  F000         	goto	i2u33_40
  1731  00001C                     i2u33_41:
  1732  00001C  EF1B  F000         	goto	i2l227
  1733  000020                     i2u33_40:
  1734  000020  A0F2               	btfss	242,0,c	;volatile
  1735  000022  EF15  F000         	goto	i2u34_41
  1736  000026  EF17  F000         	goto	i2u34_40
  1737  00002A                     i2u34_41:
  1738  00002A  EF1B  F000         	goto	i2l227
  1739  00002E                     i2u34_40:
  1740  00002E                     
  1741                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
  1742  00002E  EC7C  F003         	call	_PIN_MANAGER_IOC	;wreg free
  1743                           
  1744                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1745  000032  EF34  F000         	goto	i2l233
  1746  000036                     i2l227:
  1747  000036  ACF2               	btfss	242,6,c	;volatile
  1748  000038  EF20  F000         	goto	i2u35_41
  1749  00003C  EF22  F000         	goto	i2u35_40
  1750  000040                     i2u35_41:
  1751  000040  EF34  F000         	goto	i2l233
  1752  000044                     i2u35_40:
  1753  000044                     
  1754                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  1755  000044  AC9D               	btfss	157,6,c	;volatile
  1756  000046  EF27  F000         	goto	i2u36_41
  1757  00004A  EF29  F000         	goto	i2u36_40
  1758  00004E                     i2u36_41:
  1759  00004E  EF34  F000         	goto	i2l232
  1760  000052                     i2u36_40:
  1761  000052  AC9E               	btfss	158,6,c	;volatile
  1762  000054  EF2E  F000         	goto	i2u37_41
  1763  000058  EF30  F000         	goto	i2u37_40
  1764  00005C                     i2u37_41:
  1765  00005C  EF34  F000         	goto	i2l232
  1766  000060                     i2u37_40:
  1767  000060                     
  1768                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC1_ISR();
  1769  000060  ECE4  F002         	call	_ADC1_ISR	;wreg free
  1770                           
  1771                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1772  000064  EF34  F000         	goto	i2l233
  1773  000068                     i2l232:
  1774  000068                     i2l233:
  1775  000068  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1776  00006C  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1777  000070  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1778  000072  0011               	retfie		f
  1779  000074                     __end_of_INTERRUPT_InterruptManager:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _PIN_MANAGER_IOC *****************
  1783 ;; Defined at:
  1784 ;;		line 95 in file "mcc_generated_files/pin_manager.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		None
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1
  1798 ;;      Params:         0       0       0
  1799 ;;      Locals:         0       0       0
  1800 ;;      Temps:          0       0       0
  1801 ;;      Totals:         0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_INTERRUPT_InterruptManager
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text14
  1812  0006F8                     __ptext14:
  1813                           	callstack 0
  1814  0006F8                     _PIN_MANAGER_IOC:
  1815                           	callstack 24
  1816  0006F8                     
  1817                           ;mcc_generated_files/pin_manager.c: 98:     INTCONbits.RABIF = 0;
  1818  0006F8  90F2               	bcf	242,0,c	;volatile
  1819  0006FA  0012               	return		;funcret
  1820  0006FC                     __end_of_PIN_MANAGER_IOC:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _ADC1_ISR *****************
  1824 ;; Defined at:
  1825 ;;		line 140 in file "mcc_generated_files/adc1.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1
  1839 ;;      Params:         0       0       0
  1840 ;;      Locals:         0       0       0
  1841 ;;      Temps:          0       0       0
  1842 ;;      Totals:         0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    1
  1846 ;; This function calls:
  1847 ;;		Absolute function
  1848 ;;		_ADC1_DefaultInterruptHandler
  1849 ;; This function is called by:
  1850 ;;		_INTERRUPT_InterruptManager
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text15
  1855  0005C8                     __ptext15:
  1856                           	callstack 0
  1857  0005C8                     _ADC1_ISR:
  1858                           	callstack 23
  1859  0005C8                     
  1860                           ;mcc_generated_files/adc1.c: 143:     PIR1bits.ADIF = 0;
  1861  0005C8  9C9E               	bcf	158,6,c	;volatile
  1862  0005CA                     
  1863                           ;mcc_generated_files/adc1.c: 145:  if(ADC1_InterruptHandler)
  1864  0005CA  5039               	movf	_ADC1_InterruptHandler^0,w,c
  1865  0005CC  103A               	iorwf	(_ADC1_InterruptHandler+1)^0,w,c
  1866  0005CE  B4D8               	btfsc	status,2,c
  1867  0005D0  EFEC  F002         	goto	i2u22_41
  1868  0005D4  EFEE  F002         	goto	i2u22_40
  1869  0005D8                     i2u22_41:
  1870  0005D8  EFFB  F002         	goto	i2l201
  1871  0005DC                     i2u22_40:
  1872  0005DC                     
  1873                           ;mcc_generated_files/adc1.c: 146:     {;mcc_generated_files/adc1.c: 147:         ADC1_In
      +                          terruptHandler();
  1874  0005DC  D802               	call	i2u23_48
  1875  0005DE  EFFB  F002         	goto	i2u23_49
  1876  0005E2                     i2u23_48:
  1877  0005E2  0005               	push	
  1878  0005E4  6EFA               	movwf	pclath,c
  1879  0005E6  5039               	movf	_ADC1_InterruptHandler^0,w,c
  1880  0005E8  6EFD               	movwf	tosl,c
  1881  0005EA  503A               	movf	(_ADC1_InterruptHandler+1)^0,w,c
  1882  0005EC  6EFE               	movwf	tosh,c
  1883  0005EE  50F8               	movf	tblptru,w,c
  1884  0005F0  6EFF               	movwf	tosu,c
  1885  0005F2  50FA               	movf	pclath,w,c
  1886  0005F4  0012               	return		;indir
  1887  0005F6                     i2u23_49:
  1888  0005F6                     i2l201:
  1889  0005F6  0012               	return		;funcret
  1890  0005F8                     __end_of_ADC1_ISR:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _ADC1_DefaultInterruptHandler *****************
  1894 ;; Defined at:
  1895 ;;		line 155 in file "mcc_generated_files/adc1.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		None
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1
  1909 ;;      Params:         0       0       0
  1910 ;;      Locals:         0       0       0
  1911 ;;      Temps:          0       0       0
  1912 ;;      Totals:         0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_ADC1_Initialize
  1919 ;;		_ADC1_ISR
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text16
  1924  0006FC                     __ptext16:
  1925                           	callstack 0
  1926  0006FC                     _ADC1_DefaultInterruptHandler:
  1927                           	callstack 23
  1928  0006FC  0012               	return		;funcret
  1929  0006FE                     __end_of_ADC1_DefaultInterruptHandler:
  1930                           	callstack 0
  1931  0000                     
  1932                           	psect	text17
  1933  000000                     __ptext17:
  1934                           	callstack 0
  1935  000000                     
  1936                           	psect	rparam
  1937  0000                     
  1938                           	psect	temp
  1939  00003B                     btemp:
  1940                           	callstack 0
  1941  00003B                     	ds	1
  1942  0000                     int$flags	set	btemp
  1943  0000                     wtemp8	set	btemp+1
  1944  0000                     ttemp5	set	btemp+1
  1945  0000                     ttemp6	set	btemp+4
  1946  0000                     ttemp7	set	btemp+8
  1947                           
  1948                           	psect	idloc
  1949                           
  1950                           ;Config register IDLOC0 @ 0x200000
  1951                           ;	unspecified, using default values
  1952  200000                     	org	2097152
  1953  200000  FF                 	db	255
  1954                           
  1955                           ;Config register IDLOC1 @ 0x200001
  1956                           ;	unspecified, using default values
  1957  200001                     	org	2097153
  1958  200001  FF                 	db	255
  1959                           
  1960                           ;Config register IDLOC2 @ 0x200002
  1961                           ;	unspecified, using default values
  1962  200002                     	org	2097154
  1963  200002  FF                 	db	255
  1964                           
  1965                           ;Config register IDLOC3 @ 0x200003
  1966                           ;	unspecified, using default values
  1967  200003                     	org	2097155
  1968  200003  FF                 	db	255
  1969                           
  1970                           ;Config register IDLOC4 @ 0x200004
  1971                           ;	unspecified, using default values
  1972  200004                     	org	2097156
  1973  200004  FF                 	db	255
  1974                           
  1975                           ;Config register IDLOC5 @ 0x200005
  1976                           ;	unspecified, using default values
  1977  200005                     	org	2097157
  1978  200005  FF                 	db	255
  1979                           
  1980                           ;Config register IDLOC6 @ 0x200006
  1981                           ;	unspecified, using default values
  1982  200006                     	org	2097158
  1983  200006  FF                 	db	255
  1984                           
  1985                           ;Config register IDLOC7 @ 0x200007
  1986                           ;	unspecified, using default values
  1987  200007                     	org	2097159
  1988  200007  FF                 	db	255
  1989                           
  1990                           	psect	config
  1991                           
  1992                           ; Padding undefined space
  1993  300000                     	org	3145728
  1994  300000  FF                 	db	255
  1995                           
  1996                           ;Config register CONFIG1H @ 0x300001
  1997                           ;	Oscillator Selection bits
  1998                           ;	FOSC = IRC, Internal RC oscillator
  1999                           ;	4 X PLL Enable bit
  2000                           ;	PLLEN = OFF, PLL is under software control
  2001                           ;	Primary Clock Enable bit
  2002                           ;	PCLKEN = ON, Primary clock enabled
  2003                           ;	Fail-Safe Clock Monitor Enable
  2004                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2005                           ;	Internal/External Oscillator Switchover bit
  2006                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2007  300001                     	org	3145729
  2008  300001  28                 	db	40
  2009                           
  2010                           ;Config register CONFIG2L @ 0x300002
  2011                           ;	Power-up Timer Enable bit
  2012                           ;	PWRTEN = OFF, PWRT disabled
  2013                           ;	Brown-out Reset Enable bits
  2014                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2015                           ;	Brown Out Reset Voltage bits
  2016                           ;	BORV = 19, VBOR set to 1.9 V nominal
  2017  300002                     	org	3145730
  2018  300002  1F                 	db	31
  2019                           
  2020                           ;Config register CONFIG2H @ 0x300003
  2021                           ;	Watchdog Timer Enable bit
  2022                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2023                           ;	Watchdog Timer Postscale Select bits
  2024                           ;	WDTPS = 32768, 1:32768
  2025  300003                     	org	3145731
  2026  300003  1E                 	db	30
  2027                           
  2028                           ; Padding undefined space
  2029  300004                     	org	3145732
  2030  300004  FF                 	db	255
  2031                           
  2032                           ;Config register CONFIG3H @ 0x300005
  2033                           ;	HFINTOSC Fast Start-up bit
  2034                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2035                           ;	MCLR Pin Enable bit
  2036                           ;	MCLRE = ON, MCLR pin enabled, RA3 input pin disabled
  2037  300005                     	org	3145733
  2038  300005  88                 	db	136
  2039                           
  2040                           ;Config register CONFIG4L @ 0x300006
  2041                           ;	Stack Full/Underflow Reset Enable bit
  2042                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2043                           ;	Single-Supply ICSP Enable bit
  2044                           ;	LVP = ON, Single-Supply ICSP enabled
  2045                           ;	Boot Block Size Select bit
  2046                           ;	BBSIZ = OFF, 1kW boot block size
  2047                           ;	Extended Instruction Set Enable bit
  2048                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2049                           ;	Background Debugger Enable bit
  2050                           ;	DEBUG = OFF, Background debugger disabled, RA0 and RA1 configured as general purpose I
      +                          /O pins
  2051  300006                     	org	3145734
  2052  300006  85                 	db	133
  2053                           
  2054                           ; Padding undefined space
  2055  300007                     	org	3145735
  2056  300007  FF                 	db	255
  2057                           
  2058                           ;Config register CONFIG5L @ 0x300008
  2059                           ;	Code Protection bit
  2060                           ;	CP0 = OFF, Block 0 not code-protected
  2061                           ;	Code Protection bit
  2062                           ;	CP1 = OFF, Block 1 not code-protected
  2063  300008                     	org	3145736
  2064  300008  03                 	db	3
  2065                           
  2066                           ;Config register CONFIG5H @ 0x300009
  2067                           ;	Boot Block Code Protection bit
  2068                           ;	CPB = OFF, Boot block not code-protected
  2069                           ;	Data EEPROM Code Protection bit
  2070                           ;	CPD = OFF, Data EEPROM not code-protected
  2071  300009                     	org	3145737
  2072  300009  C0                 	db	192
  2073                           
  2074                           ;Config register CONFIG6L @ 0x30000A
  2075                           ;	Write Protection bit
  2076                           ;	WRT0 = OFF, Block 0 not write-protected
  2077                           ;	Write Protection bit
  2078                           ;	WRT1 = OFF, Block 1 not write-protected
  2079  30000A                     	org	3145738
  2080  30000A  03                 	db	3
  2081                           
  2082                           ;Config register CONFIG6H @ 0x30000B
  2083                           ;	Configuration Register Write Protection bit
  2084                           ;	WRTC = OFF, Configuration registers not write-protected
  2085                           ;	Boot Block Write Protection bit
  2086                           ;	WRTB = OFF, Boot block not write-protected
  2087                           ;	Data EEPROM Write Protection bit
  2088                           ;	WRTD = OFF, Data EEPROM not write-protected
  2089  30000B                     	org	3145739
  2090  30000B  E0                 	db	224
  2091                           
  2092                           ;Config register CONFIG7L @ 0x30000C
  2093                           ;	Table Read Protection bit
  2094                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  2095                           ;	Table Read Protection bit
  2096                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  2097  30000C                     	org	3145740
  2098  30000C  03                 	db	3
  2099                           
  2100                           ;Config register CONFIG7H @ 0x30000D
  2101                           ;	Boot Block Table Read Protection bit
  2102                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  2103  30000D                     	org	3145741
  2104  30000D  40                 	db	64
  2105                           tosu	equ	0xFFF
  2106                           tosh	equ	0xFFE
  2107                           tosl	equ	0xFFD
  2108                           stkptr	equ	0xFFC
  2109                           pclatu	equ	0xFFB
  2110                           pclath	equ	0xFFA
  2111                           pcl	equ	0xFF9
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           indf0	equ	0xFEF
  2119                           postinc0	equ	0xFEE
  2120                           postdec0	equ	0xFED
  2121                           preinc0	equ	0xFEC
  2122                           plusw0	equ	0xFEB
  2123                           fsr0h	equ	0xFEA
  2124                           fsr0l	equ	0xFE9
  2125                           wreg	equ	0xFE8
  2126                           indf1	equ	0xFE7
  2127                           postinc1	equ	0xFE6
  2128                           postdec1	equ	0xFE5
  2129                           preinc1	equ	0xFE4
  2130                           plusw1	equ	0xFE3
  2131                           fsr1h	equ	0xFE2
  2132                           fsr1l	equ	0xFE1
  2133                           bsr	equ	0xFE0
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           postdec2	equ	0xFDD
  2137                           preinc2	equ	0xFDC
  2138                           plusw2	equ	0xFDB
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      58
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    ADC1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC1_DefaultInterruptHandler(), 

    ADC1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), ADC1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_WSSlow
    _WSSlow->_WS_RYGCBM
    _WS_RYGCBM->_WS_dim
    _WS_dim->_WS_Word
    _WS_Word->_WS_Write
    _ADC1_Initialize->_ADC1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15580
                  _SYSTEM_Initialize
                             _WSSlow
 ---------------------------------------------------------------------------------
 (1) _WSSlow                                              11     5      6   15482
                                             45 COMRAM    11     5      6
                          _WS_RYGCBM
 ---------------------------------------------------------------------------------
 (2) _WS_RYGCBM                                           11     7      4   15030
                                             34 COMRAM    11     7      4
                             _WS_dim
 ---------------------------------------------------------------------------------
 (3) _WS_dim                                              11     3      8   13949
                                             23 COMRAM    11     3      8
                            _WS_Word
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _WS_Word                                             19    13      6    9330
                                              4 COMRAM    19    13      6
                           _WS_Write
 ---------------------------------------------------------------------------------
 (5) _WS_Write                                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0      98
           _ADC1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _ADC1_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC1_ISR                                             0     0      0       0
                   Absolute function *
       _ADC1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
       _ADC1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _WSSlow
     _WS_RYGCBM
       _WS_dim
         _WS_Word
           _WS_Write
         ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _ADC1_ISR
     Absolute function(Fake) *
     _ADC1_DefaultInterruptHandler *
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     38      3A       1       61.7%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
ABS                  0      0      3A       7        0.0%
BIGRAM             1FF      0       0       8        0.0%
DATA                 0      0      3A       9        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 18 21:38:57 2020

                                      l20 06E8                                        l17 06CC  
                                      l70 051E                                        l47 0622  
                                      l81 0462                                        l67 04AE  
                                      l91 0572                                        l84 0692  
                                      l68 04D8                                        l86 0696  
                                      l95 05C6                       ___wmul@multiplicand 0005  
                                     l110 0346                                       l204 06F2  
                                     l222 06F6                                       l236 0670  
                                     l176 06BA                                       l961 06F4  
                                     l971 06DC                                       l963 05F8  
                                     l965 060C                                       l967 061E  
                                     l969 0620                                       _GIE 007F97  
                                     u410 03BE                                       u411 03BA  
                                     u404 0390                                       u500 01D2  
                                     u405 038A                                       u501 01CE  
                                     u430 0402                                       u510 0212  
                                     u431 03FE                                       u511 020E  
                                     u424 03E2                                       u520 0254  
                                     u425 03DC                                       u521 0250  
                                     u450 0462                                       u530 0294  
                                     u451 045E                                       u531 0290  
                                     u380 0684                                       u444 0422  
                                     u460 04A2                                       u540 02D6  
                                     u381 0680                                       u445 041C  
                                     u461 049E                                       u541 02D2  
                                     u390 036C                                       u470 04CC  
                                     u550 0316                                       u391 0368  
                                     u471 04C8                                       u551 0312  
                                     u480 04F6                                       u560 0338  
                                     u481 04F2                                       u561 0334  
                                     u490 0190                                       u570 0572  
                                     u491 018C                                       u571 056E  
                                     u580 05C6                                       u581 05C2  
                                     u677 0546                                       u687 0598  
                                     u697 033E                                       tosl 000FFD  
                                     wreg 000FE8                  _ADC1_SetInterruptHandler 06EA  
                                    l1231 0684                                      l1311 0216  
                                    l1303 01D6                                      l1241 036C  
                                    l1233 0348                                      l1321 0278  
                                    l1313 0238                                      l1305 01F6  
                                    l1251 040A                                      l1243 03A2  
                                    l1331 02BE                                      l1323 027C  
                                    l1315 023C                                      l1307 01FA  
                                    l1229 0672                                      l1253 0434  
                                    l1245 03BE                                      l1261 064C  
                                    l1351 06C4                                      l1247 03F4  
                                    l1255 043C                                      l1239 0350  
                                    l1263 0668                                      l1271 04A2  
                                    l1335 02DA                                      l1327 0298  
                                    l1319 0258                                      l1343 031A  
                                    l1281 0698                                      l1353 06C8  
                                    l1257 0448                                      l1249 0402  
                                    l1273 04CC                                      l1337 02FA  
                                    l1329 02BA                                      l1345 0338  
                                    l1361 0550                                      l1283 06AC  
                                    l1347 06BC                                      l1259 044E  
                                    l1275 04F6                                      l1267 0464  
                                    l1339 02FE                                      l1291 0152  
                                    l1371 05A8                                      l1363 0554  
                                    l1355 0520                                      l1285 06AE  
                                    l1349 06C0                                      l1277 0502  
                                    l1269 0484                                      l1293 015A  
                                    l1365 057E                                      l1357 052C  
                                    l1279 06EA                                      l1295 0194  
                                    l1287 0078                                      l1367 0592  
                                    l1359 0540                                      l1297 01B6  
                                    l1289 008C                                      l1369 05A2  
                                    l1299 01BA                                      l1487 0624  
                                    l1489 0628                          __end_of_ADC1_ISR 05F8  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      i2l50 06FA  
                                    _WPUA 000F77                                      _WPUB 000F78  
                                    _main 0624                                      btemp 003B  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0074                           __end_of_WS_Word 0464  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 06EA                                     ?_main 0001  
                                   _ANSEL 000F7E                                     i2l201 05F6  
                                   i2l207 06FC                                     i2l232 0068  
                                   i2l233 0068                                     i2l227 0036  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                   __end_of_PIN_MANAGER_IOC 06FC  
                                   pclath 000FFA                                     ttemp5 003C  
                                   ttemp6 003F                                     ttemp7 0043  
                                   status 000FD8                                     wtemp8 003C  
                        WS_dim@brightness 001E                           __initialization 06CE  
                        __end_of_WS_Write 0698                              __end_of_main 064C  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0039  
                      __size_of_WS_RYGCBM 02D0                             __activetblptr 000002  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _ANSELH 000F7F  
                                  i2l1221 002E                                    i2l1071 05DC  
                                  i2l1047 06F8                                    i2l1223 0044  
                                  i2l1225 0052                                    i2l1217 0012  
                                  i2l1067 05C8                                    i2l1227 0060  
                                  i2l1219 0020                                    i2l1069 05CA  
                                  _OSCCON 000FD3                                 ??_WS_Word 000B  
                                  _WSSlow 0520                                    _WS_dim 0464  
                                  ___wmul 064C                                 ?_ADC1_ISR 0001  
                __size_of_ADC1_Initialize 0024                                    tblptru 000FF8  
ADC1_SetInterruptHandler@InterruptHandler 0003                          ?_PIN_MANAGER_IOC 0001  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 06BC  
         fp__ADC1_DefaultInterruptHandler 0000             ?_ADC1_DefaultInterruptHandler 0001  
                              __accesstop 0060                   __end_of__initialization 06CE  
                       __end_of_WS_RYGCBM 0348                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0005                                ??_ADC1_ISR 0001  
              ??_ADC1_SetInterruptHandler 0005                 __end_of_SYSTEM_Initialize 06CE  
                               ?_WS_Write 0003                                __pnvCOMRAM 0039  
                                 ?_WSSlow 002E                                   ?_WS_dim 0018  
                                 ?___wmul 0003                                   _OSCCON2 000FD2  
                                 i2u22_40 05DC                                   i2u22_41 05D8  
                                 i2u23_48 05E2                                   i2u23_49 05F6  
                                 i2u33_40 0020                                   i2u33_41 001C  
                                 i2u34_40 002E                                   i2u34_41 002A  
                                 i2u35_40 0044                                   i2u35_41 0040  
                                 i2u36_40 0052                                   i2u36_41 004E  
                                 i2u37_40 0060                                   i2u37_41 005C  
                                 _OSCTUNE 000F9B                         ??_ADC1_Initialize 0005  
                                 WSSlow@i 0035                                   WS_dim@A 0018  
                                 WS_dim@B 001A                                   WS_dim@C 001C  
                                 WS_dim@f 0021                                ??_WS_Write 0005  
                                 _WS_Word 0348                           __size_of_WSSlow 00A8  
                                 __Hparam 0000            ??_ADC1_DefaultInterruptHandler 0001  
                         __size_of_WS_dim 00BC                                   __Lparam 0000  
                         __size_of___wmul 0026                                   __pcinit 06CE  
                                 __ramtop 0200                                   __ptext0 0624  
                                 __ptext1 0520                                   __ptext2 0078  
                                 __ptext3 0464                                   __ptext4 064C  
                                 __ptext5 0348                                   __ptext6 0672  
                                 __ptext7 06BC                                   __ptext8 05F8  
                                 __ptext9 06DC                     _OSCILLATOR_Initialize 06DC  
                         WS_RYGCBM@length 0023                  ??_PIN_MANAGER_Initialize 0003  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 06CE  
                           __Lmediumconst 0000                     _ADC1_InterruptHandler 0039  
                       __size_of_ADC1_ISR 0030                                 WS_Word@Bx 0014  
                               WS_Write@A 0003                            __end_of_WSSlow 05C8  
                               _WS_RYGCBM 0078                            __end_of_WS_dim 0520  
            __end_of_INTERRUPT_Initialize 06F8                            __end_of___wmul 0672  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 06CE  
         __size_of_PIN_MANAGER_Initialize 002C                         __size_of_WS_Write 0026  
                __size_of_PIN_MANAGER_IOC 0004                                  ??_WSSlow 0034  
                                ??_WS_dim 0020                                ?_WS_RYGCBM 0023  
                                ??___wmul 0007                           _ADC1_Initialize 0698  
       __size_of_ADC1_SetInterruptHandler 000A                 ?_ADC1_SetInterruptHandler 0003  
                                ?_WS_Word 0005                    _PIN_MANAGER_Initialize 05F8  
                               __pintcode 0008                                  _ADC1_ISR 05C8  
            ??_INTERRUPT_InterruptManager 0001                      _INTERRUPT_Initialize 06F4  
                          ___wmul@product 0007                                  _LATAbits 000F89  
                                _PIE1bits 000F9D       __size_of_INTERRUPT_InterruptManager 006C  
                 __end_of_ADC1_Initialize 06BC                                  _PIR1bits 000F9E  
                             ??_WS_RYGCBM 0027                                  _RCONbits 000FD0  
                       ??_PIN_MANAGER_IOC 0001                                  WS_Word@A 0005  
                                WS_Word@B 0007                                  WS_Word@C 0009  
                                WS_Word@i 0016                                  WS_Word@x 000E  
                     WSSlow@maxBrightness 0030                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 0003      __end_of_ADC1_DefaultInterruptHandler 06FE  
   __size_of_ADC1_DefaultInterruptHandler 0002              _ADC1_DefaultInterruptHandler 06FC  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                                _WS_Write 0672                          __size_of_WS_Word 011C  
                                __Hrparam 0000                                  __Lrparam 0000  
                     WS_RYGCBM@brightness 0025                   ??_OSCILLATOR_Initialize 0003  
                                __ptext10 06F4                                  __ptext11 0698  
                                __ptext12 06EA                                  __ptext14 06F8  
                                __ptext15 05C8                                  __ptext16 06FC  
                                __ptext17 0000                       WSSlow@minBrightness 0032  
                           __size_of_main 0028                          ?_ADC1_Initialize 0001  
                                int$flags 003B        __end_of_INTERRUPT_InterruptManager 0074  
              _INTERRUPT_InterruptManager 0008          __end_of_ADC1_SetInterruptHandler 06F4  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0003  
                                intlevel2 0000                                WS_RYGCBM@b 002C  
                 ?_PIN_MANAGER_Initialize 0001                              WS_Word@x_248 0010  
                            WS_Word@x_249 0012                               WSSlow@i_263 0037  
                             WSSlow@lengh 002E            __end_of_PIN_MANAGER_Initialize 0624  
                         _PIN_MANAGER_IOC 06F8  
